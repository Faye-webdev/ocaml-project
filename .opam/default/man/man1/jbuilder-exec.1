.\" Pipe this output to groff -Tutf8 | less
.\"
.mso an.tmac
.TH "jbuilder-exec" 1 "" "Jbuilder 1.0+beta20.2" "Jbuilder Manual"
.\" Disable hyphenation and ragged-right
.nh
.ad l
.SH NAME
.P
jbuilder\N'45'exec \N'45' Execute a command in a similar environment as if installation was performed\N'46'
.SH SYNOPSIS
.P
\fBjbuilder exec\fR [\fIOPTION\fR]\N'46'\N'46'\N'46' \fIPROG\fR [\fIARGS\fR]\N'46'\N'46'\N'46'
.SH DESCRIPTION
.P
\fBjbuilder exec \N'45'\N'45' COMMAND\fR should behave in the same way as if you do:
.P
.nf
  $ jbuilder install
  $ COMMAND
.fi
.P
In particular if you run \fBjbuilder exec ocaml\fR, you will have access to the libraries defined in the workspace using your usual directives (\fB#require\fR for instance)
.P
When a leading / is present in the command (absolute path), then the path is interpreted as an absolute path
.P
When a / is present at any other position (relative path), then the path is interpreted as relative to the build context + current working directory (or the value of \fB\N'45'\N'45'root\fR when ran outside of the project root)
.SH OPTIONS
.TP 4
\fB\N'45'\N'45'context\fR=\fICONTEXT\fR (absent=default)
Run the command in this build context\N'46'
.TP 4
\fB\N'45'f\fR, \fB\N'45'\N'45'force\fR
Force actions associated to aliases to be re\N'45'executed even if their dependencies haven\N'39't changed\N'46'
.TP 4
\fB\N'45'\N'45'help\fR[=\fIFMT\fR] (default=auto)
Show this help in format \fIFMT\fR\N'46' The value \fIFMT\fR must be one of `auto\N'39', `pager\N'39', `groff\N'39' or `plain\N'39'\N'46' With `auto\N'39', the format is `pager` or `plain\N'39' whenever the \fBTERM\fR env var is `dumb\N'39' or undefined\N'46'
.TP 4
\fB\N'45'\N'45'no\N'45'build\fR
don\N'39't rebuild target before executing
.TP 4
\fB\N'45'\N'45'version\fR
Show version information\N'46'
.SH COMMON OPTIONS
.P
These options are common to all commands\N'46'
.TP 4
\fB\N'45'\N'45'auto\N'45'promote\fR
Automatically promote files\N'46' This is similar to running \fBjbuilder promote\fR after the build\N'46'
.TP 4
\fB\N'45'\N'45'config\N'45'file\fR=\fIFILE\fR
Load this configuration file instead of the default one\N'46'
.TP 4
\fB\N'45'\N'45'debug\N'45'backtraces\fR
Always print exception backtraces\N'46'
.TP 4
\fB\N'45'\N'45'debug\N'45'dependency\N'45'path\fR
In case of error, print the dependency path from the targets on the command line to the rule that failed\N'46' 
.TP 4
\fB\N'45'\N'45'debug\N'45'findlib\fR
Debug the findlib sub\N'45'system\N'46'
.TP 4
\fB\N'45'\N'45'dev\fR
Use stricter compilation flags by default\N'46'
.TP 4
\fB\N'45'\N'45'diff\N'45'command\fR=\fIVAL\fR
Shell command to use to diff files
.TP 4
\fB\N'45'\N'45'display\fR=\fIMODE\fR
Control the display mode of Jbuilder\N'46' See \fBdune\N'45'config(5)\fR for more details\N'46'
.TP 4
\fB\N'45'\N'45'ignore\N'45'promoted\N'45'rules\fR
Ignore rules with (mode promote)
.TP 4
\fB\N'45'j\fR \fIJOBS\fR
Run no more than \fIJOBS\fR commands simultaneously\N'46'
.TP 4
\fB\N'45'\N'45'no\N'45'buffer\fR
Do not buffer the output of commands executed by jbuilder\N'46' By default jbuilder buffers the output of subcommands, in order to prevent interleaving when multiple commands are executed in parallel\N'46' However, this can be an issue when debugging long running tests\N'46' With \fB\N'45'\N'45'no\N'45'buffer\fR, commands have direct access to the terminal\N'46' Note that as a result their output won\N'39't be captured in the log file\N'46' You should use this option in conjunction with \fB\N'45'j 1\fR, to avoid interleaving\N'46' Additionally you should use \fB\N'45'\N'45'verbose\fR as well, to make sure that commands are printed before they are being executed\N'46'
.TP 4
\fB\N'45'\N'45'no\N'45'config\fR
Do not load the configuration file
.TP 4
\fB\N'45'\N'45'only\N'45'packages\fR=\fIPACKAGES\fR
Ignore stanzas referring to a package that is not in \fBPACKAGES\fR\N'46' \fBPACKAGES\fR is a comma\N'45'separated list of package names\N'46' Note that this has the same effect as deleting the relevant stanzas from jbuild files\N'46' It is mostly meant for releases\N'46' During development, it is likely that what you want instead is to build a particular \fB<package>\N'46'install\fR target\N'46'
.TP 4
\fB\N'45'p\fR \fIPACKAGES\fR, \fB\N'45'\N'45'for\N'45'release\N'45'of\N'45'packages\fR=\fIPACKAGES\fR
Shorthand for \fB\N'45'\N'45'root \N'46' \N'45'\N'45'only\N'45'packages PACKAGE \N'45'\N'45'promote ignore \N'45'\N'45'no\N'45'config\fR\N'46' You must use this option in your \fI<package>\N'46'opam\fR files, in order to build only what\N'39's necessary when your project contains multiple packages as well as getting reproducible builds\N'46'
.TP 4
\fB\N'45'\N'45'root\fR=\fIDIR\fR
Use this directory as workspace root instead of guessing it\N'46' Note that this option doesn\N'39't change the interpretation of targets given on the command line\N'46' It is only intended for scripts\N'46'
.TP 4
\fB\N'45'\N'45'verbose\fR
Same as \fB\N'45'\N'45'display verbose\fR
.TP 4
\fB\N'45'\N'45'workspace\fR=\fIFILE\fR
Use this specific workspace file instead of looking it up\N'46'
.TP 4
\fB\N'45'x\fR \fIVAL\fR
Cross\N'45'compile using this toolchain\N'46'
.SH MORE HELP
.P
Use `\fBjbuilder\fR \fICOMMAND\fR \N'45'\N'45'help\N'39' for help on a single command\N'46'
.SH BUGS
.P
Check bug reports at https://github\N'46'com/ocaml/dune/issues